name: Pipeline and Issue Generation

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# permissions:
#   contents: read

jobs:
  # This workflow contains a job to build and submit pipeline scan, you will need to customize the build process accordingly and make sure the artifact you build is used as the file input to the pipeline scan file parameter
  build-and-pipeline-scan:
    # The type of runner that the job will run on
#     permissions:
#       contents: read # for actions/checkout to fetch code
#       security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
#       actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status 
    runs-on: ubuntu-latest
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it and copies all sources into ZIP file for submitting for analysis. Replace this section with your applications build steps
    - uses: actions/checkout@v3
#       with:
#         repository: ''

    - run: zip -r veracode-scan-target.zip ./

    # download the Veracode Static Analysis Pipeline scan jar
#     - run: curl --silent --show-error --fail -O https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
#     - run: unzip -o pipeline-scan-LATEST.zip

#     - uses: actions/setup-java@v3
#       with:
#         java-version: 8
#         distribution: 'temurin'
#     - run: java -jar pipeline-scan.jar --veracode_api_id "${{secrets.VID}}" --veracode_api_key "${{secrets.VKEY}}" --file veracode-scan-target.zip
#       continue-on-error: true
    - name: pipeline-scan action step
      id: pipeline-scan
      uses: veracode/Veracode-pipeline-scan-action@v1.0.3
      with:
        vid: ${{ secrets.VID }}
        vkey: ${{ secrets.VKEY }}
        file: "veracode-scan-target.zip" 
        fail_build: false
        filtered_json_output_file: "filtered_results.json"

    - name: save filtered results file
      uses: actions/upload-artifact@v2
      with:
        name: filtered-results
        path: filtered_results.json
  import-issues:
    needs: build-and-pipeline-scan
    runs-on: ubuntu-latest
    steps:
      - name: get scan results
        uses: actions/download-artifact@v2
        with:
          name: filtered-results

      - name: import flaws as issues
        uses: veracode/veracode-flaws-to-issues@v2.1.0
        with:
          scan-results-json: 'filtered_results.json'
#           github-token: ${{ secrets.GITHUB_TOKEN }}
